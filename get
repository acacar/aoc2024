#!/usr/bin/env python3
# Get input for Advent of Code 2024

import sys
import os
import urllib.request
import re


def get_AOC_session():
    session = None
    with open('.envvars') as f:
        for line in f:
            if line.startswith('AOC_SESSION='):
                session = line.split('=')[1].strip()
                break
    return session

def get_input(day):
    session = os.environ.get('AOC_SESSION')
    if session is None:
        session = get_AOC_session()
    if session is None:
        print('Please set AOC_SESSION environment variable')
        sys.exit(1)

    url = f'https://adventofcode.com/2024/day/{day}/input'
    headers = {
        'Cookie': f'session={session}'
    }
    # Create the request object
    request = urllib.request.Request(url, headers=headers)

    content = None
    # Make the request and read the response
    try:
        with urllib.request.urlopen(request) as response:
            if response.status != 200:
                print(f'Failed to get input: {response.reason}', file=sys.stderr)
                sys.exit(1)
            content = response.read().decode("utf-8")
    except urllib.error.HTTPError as e:
        print(f"HTTPError: {e.code} - {e.reason}")
        sys.exit(1)
    except urllib.error.URLError as e:
        print(f"URLError: {e.reason}")
        sys.exit(1)
    return content

def save_input(day, input):
    with open(f'{day}.in', 'w') as f:
        f.write(input)

def main():
    if len(sys.argv) != 2:
        print(f'Usage: {os.path.basename(sys.argv[0])} <day>')
        sys.exit(1)

    day = sys.argv[1]
    if not re.match(r'^\d+$', day):
        print('Day must be a number')
        sys.exit(1)

    input = get_input(day)
    save_input(day, input)

if __name__ == '__main__':
    main()
 